pipeline {
    agent any
    
    environment {
        // SonarQube configuration
        SONAR_TOKEN = credentials('SonarToken')  // ID of your SonarQube access token in Jenkins
        SONAR_PROJECT_KEY = 'Simple-Calculator'  // SonarQube project key
        SONAR_PROJECT_NAME = 'Simple-Calculator'  // Name of your SonarQube project
        SONAR_PROJECT_VERSION = '1.0'  // Version of your project
        SONAR_SOURCES = 'src'  // Source code directory
        SONAR_LANGUAGE = 'py'  // Language of your project (Python)
        SONAR_URL = "http://3.83.158.55:9000/"
        
        // Docker configuration
        DOCKER_CREDENTIALS_ID = 'dockerHub'  // ID of your Docker Hub credentials in Jenkins
        DOCKER_IMAGE_NAME = 'pramod858/simple-calculator'  // Name of your Docker image on Docker Hub
        GITHUB_REPO_URL = 'https://github.com/Pramod858/Projects-Simple-Calculator.git'  // URL of your GitHub repository
        DOCKERFILE_PATH = 'Dockerfile'  // Path to your Dockerfile in the GitHub repository
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo " Checkout Stage"
                git branch: 'main', url: "${env.GITHUB_REPO_URL}"
            }
        }
        

        stage('SonarQube Analysis') {
            environment {
                SCANNER_HOME = tool 'SonarScanner'
            }
            steps {
                echo "Running SonarQube analysis"
                withCredentials([string(credentialsId: env.SONAR_TOKEN, variable: 'SONAR_LOGIN')]) {
                    sh "${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectKey=${env.SONAR_PROJECT_KEY} \
                        -Dsonar.projectName=${env.SONAR_PROJECT_NAME} \
                        -Dsonar.projectVersion=${env.SONAR_PROJECT_VERSION} \
                        -Dsonar.url=${env.SONAR_URL} \
                        -Dsonar.sources=${env.SONAR_SOURCES} \
                        -Dsonar.language=${env.SONAR_LANGUAGE} \
                        -Dsonar.login=${env.SONAR_LOGIN}"
                    echo "This is SoanrQube Analysis"
                }
            }
        }
        
        
        
        stage('Build Docker Image') {
            steps {
                 echo "Docker Image Building Stage"
                script {
                   
                    docker.build(env.DOCKER_IMAGE_NAME, "--file ${env.DOCKERFILE_PATH} .")
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                echo "Docker Image is Pushing to Docker Hub"
                withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', env.DOCKER_CREDENTIALS_ID) {
                            docker.image(env.DOCKER_IMAGE_NAME).push()
                        }
                    }
                }
                echo "Docker Image Pushed to Docker Hub"
            }
        }
        
        stage('Deploy') {
            steps {
                echo "Deploying Started ..."
                script {
                    sh "docker-compose down && docker-compose up -d"
                }
                echo "Deployed Successfully."
            }
        }

    }
}